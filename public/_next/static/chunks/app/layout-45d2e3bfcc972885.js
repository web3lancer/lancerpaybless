(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[177],{18547:(e,t,a)=>{"use strict";a.r(t),a.d(t,{PaymentRequestProvider:()=>c,usePaymentRequest:()=>u});var r=a(74807),n=a(95423),o=a(53696),i=a(99847);let s=(0,n.createContext)(void 0);function c(e){let{children:t}=e,{user:a}=(0,i.A)(),[c,u]=(0,n.useState)([]),[l,d]=(0,n.useState)(!0),h=async()=>{if(!a){u([]),d(!1);return}d(!0);try{let e=await o.B.getUserPaymentRequests(a.$id);u(e)}catch(e){console.error("Failed to fetch payment requests:",e),u([])}finally{d(!1)}},m=async e=>{if(!a)throw Error("User not authenticated");try{let t="INV-".concat(Date.now(),"-").concat(Math.random().toString(36).substring(2,8).toUpperCase()),r=e.dueDate||new Date(Date.now()+6048e5).toISOString(),n=await o.B.createPaymentRequest({fromUserId:a.$id,toEmail:e.toEmail,tokenId:e.tokenId,amount:e.amount,description:e.description,dueDate:r,status:"pending",invoiceNumber:t});return await o.B.createSecurityLog({userId:a.$id,action:"payment_request_created",ipAddress:"unknown",success:!0,riskScore:1,metadata:JSON.stringify({requestId:n.requestId,amount:e.amount,tokenId:e.tokenId,invoiceNumber:t})}),await h(),n}catch(e){throw console.error("Failed to create payment request:",e),e}},p=async(e,t)=>{try{await o.B.updatePaymentRequest(e,{status:"paid",paymentTxId:t,paidAt:new Date().toISOString()}),await o.B.createSecurityLog({userId:a.$id,action:"payment_request_paid",ipAddress:"unknown",success:!0,riskScore:0,metadata:JSON.stringify({requestId:e,transactionId:t})}),await h()}catch(e){throw console.error("Failed to pay payment request:",e),e}},g=async e=>{try{await o.B.updatePaymentRequest(e,{status:"cancelled"}),await o.B.createSecurityLog({userId:a.$id,action:"payment_request_cancelled",ipAddress:"unknown",success:!0,riskScore:0,metadata:JSON.stringify({requestId:e})}),await h()}catch(e){throw console.error("Failed to cancel payment request:",e),e}};return(0,n.useEffect)(()=>{h()},[a]),(0,r.jsx)(s.Provider,{value:{paymentRequests:c,isLoading:l,createPaymentRequest:m,payPaymentRequest:p,cancelPaymentRequest:g,refreshPaymentRequests:h,getActiveRequests:()=>c.filter(e=>"pending"===e.status),getPaidRequests:()=>c.filter(e=>"paid"===e.status)},children:t})}function u(){let e=(0,n.useContext)(s);if(void 0===e)throw Error("usePaymentRequest must be used within a PaymentRequestProvider");return e}},28434:(e,t,a)=>{"use strict";a.d(t,{Providers:()=>o});var r=a(74807),n=a(99847);function o(e){let{children:t}=e;return(0,r.jsx)(n.O,{children:t})}},45151:()=>{},58179:(e,t,a)=>{Promise.resolve().then(a.t.bind(a,45151,23)),Promise.resolve().then(a.bind(a,28434)),Promise.resolve().then(a.bind(a,85430)),Promise.resolve().then(a.bind(a,62189)),Promise.resolve().then(a.bind(a,18547)),Promise.resolve().then(a.bind(a,68080)),Promise.resolve().then(a.bind(a,86033))},62189:(e,t,a)=>{"use strict";a.r(t),a.d(t,{ExchangeRateProvider:()=>s,useExchangeRate:()=>c});var r=a(74807),n=a(95423);class o{static async getExchangeRate(e){let t=this.cache.get(e);if(t&&Date.now()-t.timestamp<this.CACHE_DURATION)return t.rate;try{let t=this.TOKEN_MAPPING[e.toLowerCase()];if(!t)return console.warn("No CoinGecko mapping for token: ".concat(e)),this.getMockRate(e);let a=await fetch("".concat(this.COINGECKO_API,"/simple/price?ids=").concat(t,"&vs_currencies=usd&include_24hr_change=true"),{headers:{Accept:"application/json"},signal:AbortSignal.timeout(1e4)});if(!a.ok)throw Error("HTTP ".concat(a.status));let r=(await a.json())[t];if(!r)throw Error("No price data for ".concat(t));let n={tokenId:e.toLowerCase(),symbol:e.toUpperCase(),name:this.getTokenName(e),price_usd:r.usd,price_change_24h:r.usd_24h_change||0,last_updated:new Date().toISOString()};return this.cache.set(e,{rate:n,timestamp:Date.now()}),n}catch(t){return console.error("Failed to fetch exchange rate for ".concat(e,":"),t),this.getMockRate(e)}}static async getMultipleExchangeRates(e){let t=[...new Set(e.map(e=>e.toLowerCase()))],a=t.map(e=>this.TOKEN_MAPPING[e]).filter(Boolean);if(0===a.length)return t.map(e=>this.getMockRate(e)).filter(Boolean);try{let e=await fetch("".concat(this.COINGECKO_API,"/simple/price?ids=").concat(a.join(","),"&vs_currencies=usd&include_24hr_change=true"),{headers:{Accept:"application/json"},signal:AbortSignal.timeout(15e3)});if(!e.ok)throw Error("HTTP ".concat(e.status));let r=await e.json(),n=[];for(let e of t){let t=r[this.TOKEN_MAPPING[e]];if(t){let a={tokenId:e,symbol:e.toUpperCase(),name:this.getTokenName(e),price_usd:t.usd,price_change_24h:t.usd_24h_change||0,last_updated:new Date().toISOString()};this.cache.set(e,{rate:a,timestamp:Date.now()}),n.push(a)}else{let t=this.getMockRate(e);t&&n.push(t)}}return n}catch(e){return console.error("Failed to fetch multiple exchange rates:",e),t.map(e=>this.getMockRate(e)).filter(Boolean)}}static calculateUsdValue(e,t,a){let r="string"==typeof e?parseFloat(e):e;if(isNaN(r))return 0;if(a)return r*a.price_usd;let n=this.getMockRate(t);return n?r*n.price_usd:0}static formatUsdValue(e){return e>=1e6?"$".concat((e/1e6).toFixed(2),"M"):e>=1e3?"$".concat((e/1e3).toFixed(2),"K"):"$".concat(e.toFixed(2))}static formatPriceChange(e){let t=e>=0;return{text:"".concat(t?"+":"").concat(e.toFixed(2),"%"),color:t?"text-green-600":"text-red-600"}}static getMockRate(e){let t={btc:{price:43e3,name:"Bitcoin"},eth:{price:2400,name:"Ethereum"},matic:{price:.85,name:"Polygon"},bnb:{price:310,name:"BNB"},usdt:{price:1,name:"Tether"},usdc:{price:1,name:"USD Coin"},ada:{price:.45,name:"Cardano"},sol:{price:95,name:"Solana"},dot:{price:7.2,name:"Polkadot"},avax:{price:35,name:"Avalanche"}}[e.toLowerCase()];return t?{tokenId:e.toLowerCase(),symbol:e.toUpperCase(),name:t.name,price_usd:t.price,price_change_24h:(Math.random()-.5)*10,last_updated:new Date().toISOString()}:null}static getTokenName(e){return({btc:"Bitcoin",eth:"Ethereum",matic:"Polygon",bnb:"BNB",usdt:"Tether",usdc:"USD Coin",ada:"Cardano",sol:"Solana",dot:"Polkadot",avax:"Avalanche"})[e.toLowerCase()]||e.toUpperCase()}static clearCache(){this.cache.clear()}static getCacheSize(){return this.cache.size}}o.COINGECKO_API="https://api.coingecko.com/api/v3",o.CACHE_DURATION=3e5,o.cache=new Map,o.TOKEN_MAPPING={btc:"bitcoin",eth:"ethereum",matic:"matic-network",bnb:"binancecoin",usdt:"tether",usdc:"usd-coin",ada:"cardano",sol:"solana",dot:"polkadot",avax:"avalanche-2"};let i=(0,n.createContext)(void 0);function s(e){let{children:t}=e,[a,s]=(0,n.useState)({}),[c,u]=(0,n.useState)(!1),[l,d]=(0,n.useState)(null),h=["btc","eth","matic","bnb","usdt","usdc"],m=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h;u(!0);try{let t=await o.getMultipleExchangeRates(e),a={};t.forEach(e=>{a[e.tokenId]=e}),s(e=>({...e,...a})),d(new Date)}catch(e){console.error("Failed to refresh exchange rates:",e)}finally{u(!1)}},p=e=>a[e.toLowerCase()]||null;return(0,n.useEffect)(()=>{m();let e=setInterval(()=>{m()},3e5);return()=>clearInterval(e)},[]),(0,n.useEffect)(()=>{let e=()=>{!document.hidden&&l&&Date.now()-l.getTime()>12e4&&m()};return document.addEventListener("visibilitychange",e),()=>document.removeEventListener("visibilitychange",e)},[l]),(0,r.jsx)(i.Provider,{value:{rates:a,isLoading:c,lastUpdated:l,refreshRates:m,getRate:p,calculateUsdValue:(e,t)=>{let a=p(t);return o.calculateUsdValue(e,t,a||void 0)},formatUsdValue:e=>o.formatUsdValue(e),formatPriceChange:e=>o.formatPriceChange(e)},children:t})}function c(){let e=(0,n.useContext)(i);if(void 0===e)throw Error("useExchangeRate must be used within an ExchangeRateProvider");return e}},68080:(e,t,a)=>{"use strict";a.r(t),a.d(t,{TransactionProvider:()=>s,useTransaction:()=>c});var r=a(74807),n=a(95423),o=a(53696);let i=(0,n.createContext)(void 0);function s(e){let{children:t}=e,[a,s]=(0,n.useState)([]),[c,u]=(0,n.useState)(!1),l=async()=>{u(!0);try{let e=await o.B.getUserTransactions("current-user-id");s(e)}catch(e){console.error("Failed to load transactions:",e)}finally{u(!1)}},d=async e=>{try{let t=await o.B.createTransaction(e);return await l(),t.transactionId}catch(e){throw console.error("Failed to send transaction:",e),e}},h=async()=>{await l()};return(0,n.useEffect)(()=>{l()},[]),(0,r.jsx)(i.Provider,{value:{transactions:a,isLoading:c,sendTransaction:d,getTransactionsByWallet:e=>a.filter(t=>t.fromWalletId===e||t.toAddress===e),refreshTransactions:h},children:t})}function c(){let e=(0,n.useContext)(i);if(void 0===e)throw Error("useTransaction must be used within a TransactionProvider");return e}}},e=>{var t=t=>e(e.s=t);e.O(0,[598,960,33,412,640,358],()=>t(58179)),_N_E=e.O()}]);