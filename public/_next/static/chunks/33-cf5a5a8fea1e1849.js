"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[33],{53696:(e,t,a)=>{a.d(t,{B:()=>s});var r=a(74219);class s{static async createUser(e){let t=new Date().toISOString();return await r.LL.createDocument(r.AH,r.WU.USERS,e.userId,{...e,createdAt:t,updatedAt:t})}static async getUser(e){return await r.LL.getDocument(r.AH,r.WU.USERS,e)}static async updateUser(e,t){return await r.LL.updateDocument(r.AH,r.WU.USERS,e,{...t,updatedAt:new Date().toISOString()})}static async getUserByEmail(e){try{return(await r.LL.listDocuments(r.AH,r.WU.USERS,[r.XK.equal("email",e)])).documents[0]||null}catch(e){return null}}static async getUserByUsername(e){try{return(await r.LL.listDocuments(r.AH,r.WU.USERS,[r.XK.equal("username",e)])).documents[0]||null}catch(e){return null}}static async createWallet(e){let t=r.ID.unique(),a=await r.LL.createDocument(r.AH,r.WU.WALLETS,t,{...e,walletName:e.name,walletAddress:e.address,walletId:t,createdAt:new Date().toISOString()});return a.name=a.walletName,a.address=a.walletAddress,a}static async getUserWallets(e){return(await r.LL.listDocuments(r.AH,r.WU.WALLETS,[r.XK.equal("userId",e),r.XK.equal("isActive",!0),r.XK.orderDesc("createdAt")])).documents.map(e=>({...e,name:e.walletName||e.name,address:e.walletAddress||e.address}))}static async getWallet(e){return await r.LL.getDocument(r.AH,r.WU.WALLETS,e)}static async updateWallet(e,t){return await r.LL.updateDocument(r.AH,r.WU.WALLETS,e,t)}static async setDefaultWallet(e,t){let a=await this.getUserWallets(e);return await Promise.all(a.map(e=>this.updateWallet(e.walletId,{isDefault:!1}))),await this.updateWallet(t,{isDefault:!0})}static async getTokens(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;return(await r.LL.listDocuments(r.AH,r.WU.TOKENS,[r.XK.equal("isActive",!0),r.XK.orderAsc("name"),r.XK.limit(e)])).documents}static async getToken(e){return await r.LL.getDocument(r.AH,r.WU.TOKENS,e)}static async getTokenBySymbol(e){try{return(await r.LL.listDocuments(r.AH,r.WU.TOKENS,[r.XK.equal("symbol",e)])).documents[0]||null}catch(e){return null}}static async createTransaction(e){let t=r.ID.unique();return await r.LL.createDocument(r.AH,r.WU.TRANSACTIONS,t,{...e,transactionId:t,createdAt:new Date().toISOString()})}static async getUserTransactions(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:50;return(await r.LL.listDocuments(r.AH,r.WU.TRANSACTIONS,[r.XK.or([r.XK.equal("fromUserId",e),r.XK.equal("toUserId",e)]),r.XK.orderDesc("createdAt"),r.XK.limit(t)])).documents}static async getTransaction(e){return await r.LL.getDocument(r.AH,r.WU.TRANSACTIONS,e)}static async updateTransaction(e,t){return await r.LL.updateDocument(r.AH,r.WU.TRANSACTIONS,e,t)}static async createPaymentRequest(e){let t=r.ID.unique();return await r.LL.createDocument(r.AH,r.WU.PAYMENT_REQUESTS,t,{...e,requestId:t,createdAt:new Date().toISOString()})}static async getUserPaymentRequests(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"sent";return(await r.LL.listDocuments(r.AH,r.WU.PAYMENT_REQUESTS,[r.XK.equal("sent"===t?"fromUserId":"toUserId",e),r.XK.orderDesc("createdAt")])).documents}static async getPaymentRequest(e){return await r.LL.getDocument(r.AH,r.WU.PAYMENT_REQUESTS,e)}static async updatePaymentRequest(e,t){await r.LL.updateDocument(r.AH,r.WU.PAYMENT_REQUESTS,e,t)}static async getPaymentRequestByInvoice(e){let t=await r.LL.listDocuments(r.AH,r.WU.PAYMENT_REQUESTS,[r.XK.equal("invoiceNumber",e)]);if(0===t.documents.length)throw Error("Payment request not found");return t.documents[0]}static async getExchangeRates(){return(await r.LL.listDocuments(r.AH,r.WU.EXCHANGE_RATES,[r.XK.equal("isActive",!0),r.XK.orderDesc("lastUpdated")])).documents}static async getExchangeRate(e,t){try{return(await r.LL.listDocuments(r.AH,r.WU.EXCHANGE_RATES,[r.XK.equal("fromCurrency",e),r.XK.equal("toCurrency",t),r.XK.equal("isActive",!0)])).documents[0]||null}catch(e){return null}}static async createSecurityLog(e){let t=r.ID.unique();return await r.LL.createDocument(r.AH,r.WU.SECURITY_LOGS,t,{...e,logId:t,createdAt:new Date().toISOString()})}static async getUserSecurityLogs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:50;return(await r.LL.listDocuments(r.AH,r.WU.SECURITY_LOGS,[r.XK.equal("userId",e),r.XK.orderDesc("createdAt"),r.XK.limit(t)])).documents}static async createAPIKey(e){let t=r.ID.unique();return await r.LL.createDocument(r.AH,r.WU.API_KEYS,t,{...e,keyId:t,createdAt:new Date().toISOString()})}static async getUserAPIKeys(e){return(await r.LL.listDocuments(r.AH,r.WU.API_KEYS,[r.XK.equal("userId",e),r.XK.orderDesc("createdAt")])).documents}static async updateAPIKey(e,t){return await r.LL.updateDocument(r.AH,r.WU.API_KEYS,e,t)}static async deactivateAPIKey(e){return await this.updateAPIKey(e,{isActive:!1})}}},74219:(e,t,a)=>{a.d(t,{AH:()=>i,ID:()=>r.ID,LL:()=>n,WU:()=>u,XK:()=>r.XK,ct:()=>c});var r=a(69960);let s=new r.Kj;s.setEndpoint("https://fra.cloud.appwrite.io/v1").setProject("68399b0c0018d6ce71bc");let c=new r.gD(s),n=new r.Lv(s);new r.wc(s);let i="683a31960011608eaee5",u={USERS:"users",WALLETS:"wallets",TOKENS:"tokens",TRANSACTIONS:"transactions",PAYMENT_REQUESTS:"payment_requests",EXCHANGE_RATES:"exchange_rates",SECURITY_LOGS:"security_logs",API_KEYS:"api_keys"}},85430:(e,t,a)=>{a.r(t),a.d(t,{AuthProvider:()=>u,useAuth:()=>l});var r=a(74807),s=a(95423),c=a(53696),n=a(74219);let i=(0,s.createContext)(void 0);function u(e){let{children:t}=e,[a,u]=(0,s.useState)(null),[l,o]=(0,s.useState)(null),[d,w]=(0,s.useState)(!0),y=e=>e.split("@")[0].toLowerCase().replace(/[^a-z0-9]/g,""),A=async e=>{try{let t=await c.B.getUser(e.$id);if(t)return o(t),t}catch(e){console.log("Creating new user profile...")}try{let t=y(e.email),a={userId:e.$id,email:e.email,username:t,displayName:e.name||t,kycStatus:"pending",kycLevel:0,twoFactorEnabled:!1,isActive:!0,preferredCurrency:"USD"},r=await c.B.createUser(a);return o(r),await c.B.createSecurityLog({userId:e.$id,action:"profile_created",ipAddress:"unknown",success:!0,riskScore:0}),r}catch(e){throw console.error("Failed to create user profile:",e),e}},S=async()=>{if(a)try{let e=await c.B.getUser(a.$id);o(e)}catch(e){console.error("Failed to refresh profile:",e)}},m=async(e,t)=>{w(!0);try{await n.ct.createEmailPasswordSession(e,t);let a=await n.ct.get();u(a),await A(a),await c.B.createSecurityLog({userId:a.$id,action:"login_success",ipAddress:"unknown",success:!0,riskScore:0})}catch(t){if(e)try{let t=await c.B.getUserByEmail(e);t&&await c.B.createSecurityLog({userId:t.userId,action:"login_failed",ipAddress:"unknown",success:!1,riskScore:3})}catch(e){console.error("Failed to log security event:",e)}throw t}finally{w(!1)}},L=async(e,t,a)=>{w(!0);try{await n.ct.create("unique()",e,t,a),await n.ct.createEmailPasswordSession(e,t);let r=await n.ct.get();u(r),await A(r)}catch(e){throw e}finally{w(!1)}},g=async()=>{try{a&&await c.B.createSecurityLog({userId:a.$id,action:"logout",ipAddress:"unknown",success:!0,riskScore:0}),await n.ct.deleteSession("current"),u(null),o(null)}catch(e){console.error("Logout failed:",e)}};return(0,s.useEffect)(()=>{(async()=>{w(!0);try{let e=await n.ct.get();u(e),await A(e)}catch(e){u(null),o(null)}finally{w(!1)}})()},[]),(0,r.jsx)(i.Provider,{value:{user:a,userProfile:l,isLoading:d,login:m,register:L,logout:g,refreshProfile:S},children:t})}function l(){let e=(0,s.useContext)(i);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e}},86033:(e,t,a)=>{a.r(t),a.d(t,{WalletProvider:()=>u,useWallet:()=>l});var r=a(74807),s=a(95423),c=a(53696),n=a(99847);let i=(0,s.createContext)(void 0);function u(e){let{children:t}=e,{user:a}=(0,n.A)(),[u,l]=(0,s.useState)([]),[o,d]=(0,s.useState)(null),[w,y]=(0,s.useState)(!0),A=async()=>{if(!a){l([]),d(null),y(!1);return}y(!0);try{let e=await c.B.getUserWallets(a.$id);l(e);let t=e.find(e=>e.isDefault)||e[0]||null;d(t)}catch(e){console.error("Failed to fetch wallets:",e),l([]),d(null)}finally{y(!1)}},S=async e=>{if(!a)throw Error("User not authenticated");try{let t=0===u.length,r=await c.B.createWallet({userId:a.$id,...e,isDefault:t,isActive:!0,balance:0,name:"",address:""});return await c.B.createSecurityLog({userId:a.$id,action:"wallet_created",ipAddress:"unknown",success:!0,riskScore:1,metadata:JSON.stringify({blockchain:e.blockchain,walletType:e.walletType})}),await A(),r}catch(e){throw console.error("Failed to create wallet:",e),e}},m=async(e,t)=>{try{await c.B.updateWallet(e,t),(t.encryptedPrivateKey||t.publicKey)&&await c.B.createSecurityLog({userId:a.$id,action:"wallet_keys_updated",ipAddress:"unknown",success:!0,riskScore:2,metadata:JSON.stringify({walletId:e})}),await A()}catch(e){throw console.error("Failed to update wallet:",e),e}},L=async e=>{if(!a)throw Error("User not authenticated");try{await c.B.setDefaultWallet(a.$id,e),await c.B.createSecurityLog({userId:a.$id,action:"default_wallet_changed",ipAddress:"unknown",success:!0,riskScore:1,metadata:JSON.stringify({walletId:e})}),await A()}catch(e){throw console.error("Failed to set default wallet:",e),e}},g=async e=>{try{return(await c.B.getWallet(e)).balance}catch(e){return console.error("Failed to get wallet balance:",e),0}};return(0,s.useEffect)(()=>{A()},[a]),(0,r.jsx)(i.Provider,{value:{wallets:u,defaultWallet:o,isLoading:w,createWallet:S,updateWallet:m,setDefaultWallet:L,refreshWallets:A,getWalletBalance:g},children:t})}function l(){let e=(0,s.useContext)(i);if(void 0===e)throw Error("useWallet must be used within a WalletProvider");return e}},99847:(e,t,a)=>{a.d(t,{A:()=>r.useAuth,O:()=>r.AuthProvider});var r=a(85430)}}]);